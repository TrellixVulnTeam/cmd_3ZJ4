#!/usr/bin/env python3
# -*- coding: utf-8 -*-
import gzip
import os
import sys
from glob import glob

ver = sys.version_info[0]*10 + sys.version_info[1]

def usage():
    sys.stderr.write("This Program is gzip Uncompress Size Checker.\n\n")
    sys.stderr.write("Usage: python " + os.path.basename(sys.argv[0]) + " test.gz [...]\n")
    sys.exit(1)

def gzsize(f, chunksize=1048576):
    try:
        fp = gzip.open(f)
        pos = -1
        while fp.tell() != pos:
            pos = fp.tell()
            fp.seek(pos + chunksize)

        info = (fp.fileobj.tell(), fp.tell(), fp.tell()/fp.fileobj.tell(), os.path.basename(f))
        fp.close()

        if ver > 25:
            sys.stdout.write("{: >13,d} {: >15,d} {: >5.1f}% {}\n".format(*info))
        else:
            sys.stdout.write("%13d %15d %5.1f%% %s\n" % info)

        return 0
    except:
        fp.close()
        sys.stderr.write("Error: " + f + " " + sys.exc_info()[0] + "\n")
        return 1

def main():
    if len(sys.argv) == 1 or "-h" in sys.argv or "--help" in sys.argv:
        usage()

    retcode = 0
    isrun = 0
    for a in sys.argv[1:]:
        for f in glob(a):
            if isrun == 0:
                sys.stdout.write("Compress byte Uncompress byte  ratio filename\n")
            retcode += gzsize(f)
            isrun += 1

    if isrun == 0:
        sys.stderr.write("File not Found\n\n")
        usage()

    sys.exit(retcode)

if __name__ == "__main__":
#     sys.argv.append("/etc/alternatives/infobrowser.1.gz")
    main()